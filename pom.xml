<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.github.acme</groupId>
    <artifactId>tree-seed</artifactId>
    <version>0.2-SNAPSHOT</version>
    <packaging>pom</packaging>

    <name>tree-seed</name>
    <description>
        Basic dependencies that should be present in any
        Java/Maven project.

        Logging note: although slf4j is imported, along with its
        wrappers (log4j-over-slf4j, jcl-over-slf4j, etc), it does
        not provide an implementation (for example, logback, log4j,
        etc). Whoever uses this pom will need to add the
        "implementation" dependency!
    </description>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

        <slf4j-version>1.7.1</slf4j-version>

        <google.guava-version>14.0</google.guava-version>
        <joda-time-version>2.1</joda-time-version>

        <!-- Testing tools -->
        <junit-version>4.11</junit-version>
        <easytesting.fest-assert-version>2.0M8</easytesting.fest-assert-version>
        <mockito-version>1.9.5</mockito-version>

        <findbugs.version>2.0.1</findbugs.version>
    </properties>

    <dependencyManagement>
        <dependencies>

            <!-- Logging -->
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-api</artifactId>
                <version>${slf4j-version}</version>
            </dependency>
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>jcl-over-slf4j</artifactId>
                <version>${slf4j-version}</version>
            </dependency>
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>jul-to-slf4j</artifactId>
                <version>${slf4j-version}</version>
            </dependency>

            <!-- Misc dependencies -->
            <dependency>
                <groupId>com.google.guava</groupId>
                <artifactId>guava</artifactId>
                <version>${google.guava-version}</version>
            </dependency>
            <dependency>
                <groupId>joda-time</groupId>
                <artifactId>joda-time</artifactId>
                <version>${joda-time-version}</version>
            </dependency>

            <!-- Test dependencies. Scope is not set (i.e. to 'test'), because
                 managed dependencies' scopes are not transitive (that means they
                 not get propagated to child poms). -->
            <dependency>
                <groupId>junit</groupId>
                <artifactId>junit</artifactId>
                <version>${junit-version}</version>
            </dependency>
            <dependency>
                <groupId>org.easytesting</groupId>
                <artifactId>fest-assert-core</artifactId>
                <version>${easytesting.fest-assert-version}</version>
            </dependency>
            <dependency>
                <groupId>org.mockito</groupId>
                <artifactId>mockito-core</artifactId>
                <version>${mockito-version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>org.hamcrest</groupId>
                        <artifactId>hamcrest-core</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>

        </dependencies>
    </dependencyManagement>


    <dependencies>

        <dependency>
            <groupId>com.google.code.findbugs</groupId>
            <artifactId>jsr305</artifactId>
            <version>${findbugs.version}</version>
        </dependency>

        <!-- Logging -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>jcl-over-slf4j</artifactId>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>jul-to-slf4j</artifactId>
        </dependency>

        <!-- Misc dependencies -->
        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
        </dependency>
        <dependency>
            <groupId>joda-time</groupId>
            <artifactId>joda-time</artifactId>
        </dependency>

        <!-- Test dependencies -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.easytesting</groupId>
            <artifactId>fest-assert-core</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
            <scope>test</scope>
        </dependency>

    </dependencies>

    <!-- The build plugins only compile against 1.6 and provide source jars
         for each module. Additionally, maven-enforcer plugin is used to
         ensure java 1.6 -->
    <build>

        <plugins>

            <!-- Compile against 1.6 - TODO Hardcoded to 1.6? -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>2.3.2</version>
                <configuration>
                    <source>1.6</source>
                    <target>1.6</target>
                </configuration>
            </plugin>

            <!-- Include sources JAR when packaging -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
                <version>2.1.2</version>
                <inherited>true</inherited>
                <executions>
                    <execution>
                        <id>attach-sources</id>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <includePom>true</includePom>
                </configuration>
            </plugin>

            <!-- TODO release plugin requires a distribution management tag, which is absent -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-release-plugin</artifactId>
                <version>2.1</version>
                <configuration>
                    <autoVersionSubmodules>true</autoVersionSubmodules>
                    <!-- This is specifically placed here in order to avoid deployment
                         (distributionManagement tag is missing). Remove it in order for
                         plugin to also deploy when version is released. -->
                    <goals>
                        install
                    </goals>
                </configuration>
            </plugin>

        </plugins>
    </build>

    <scm>
        <connection>scm:git:git@github.com:djalexd/tree-seed.git</connection>
        <developerConnection>scm:git:git@github.com:djalexd/tree-seed.git</developerConnection>
        <url>https://github.com/djalexd/tree-seed</url>
    </scm>


</project>

